- description: Valid Input
  code: |-
    &LBRA &COM Teste geral
      x_1 &ASSIGN &SCAN&FLP&FRP&LF
      
      &PRINT&FLPx_1&FRP&LF
      
      &IF &ELP(x_1 &GT 1 &AND &NOT&NOT&NOT(x_1 &LT 1)) &OR x_1 &EQ 3&ERP &LBRA
        x_1 &ASSIGN 2&LF
      &RBRA
      
      x &ASSIGN 3+6/3   *  2 -+-  +  2*4/2 + 0/1 -((6+ ((4)))/(2))&LF &COM Teste &COM Teste 2
      y_1 &ASSIGN 3&LF
      y_1 &ASSIGN y_1 + x_1&LF
      z__ &ASSIGN x + y_1&LF
      
      &IF &ELPx_1 &EQ 2&ERP &LBRA
        x_1 &ASSIGN 2&LF
      &RBRA
      
      &IF &ELPx_1 &EQ 3&ERP &LBRA
        x_1 &ASSIGN 2&LF
      &RBRA &ELSE &LBRA
        x_1 &ASSIGN 3&LF
      &RBRA
      
      x_1 &ASSIGN 0&LF
      &WHILE &ELPx_1 &LT 1 &OR x &EQ 2&ERP &LBRA
        &PRINT&FLPx_1&FRP&LF
        x_1 &ASSIGN x_1 + 1&LF
      &RBRA
      
      
      &LF&LF&LF &LBRA&NL&LBRA&NL &RBRA&NL&RBRA &COM Teste de colchetes
      &COM Saida final
      &PRINT&FLPx_1&FRP&LF
      &PRINT&FLPx&FRP&LF
      &PRINT&FLPz__+1&FRP&LF
    &RBRA &COM Teste do filter
  input: |-
    3
  exception: false
  output: |-
    3
    0
    1
    6
    12
  languages:
  - All
- description: Missing Expression After +
  code: |-
    &COM Unexpected token EOL
    ? &ASSIGN $+&LF
  input: ''
  exception: true
  output: Unexpected token EOL
  languages:
  - All
- description: Missing Expression After -
  code: |-
    &COM Unexpected token EOL
    ? &ASSIGN $-&LF
  input: ''
  exception: true
  output: Unexpected token EOL
  languages:
  - All
- description: Empty Expression
  code: |-
    &COM Unexpected token EOL
    ? &ASSIGN &LF
  input: ''
  exception: true
  output: Unexpected token EOL
  languages:
  - All
- description: Missing Expression After +
  code: |-
    &COM Unexpected token EOL
    ? &ASSIGN +&LF
  input: ''
  exception: true
  output: Unexpected token EOL
  languages:
  - All
- description: Missing Expression After -
  code: |-
    &COM Unexpected token EOL
    ? &ASSIGN -&LF
  input: ''
  exception: true
  output: Unexpected token EOL
  languages:
  - All
- description: No Operator
  code: |-
    &COM Unexpected token INT (expected EOL)
    ? &ASSIGN $ $&LF
  input: ''
  exception: true
  output: Unexpected token INT
  languages:
  - All
- description: Invalid Token
  code: |-
    &COM Invalid token ,
    ? &ASSIGN ,&LF
  input: ''
  exception: true
  output: Invalid token ,
  languages:
  - All
- description: Starting with Operator *
  code: |-
    &COM Unexpected token MULT
    ? &ASSIGN *$&LF
  input: ''
  exception: true
  output: Unexpected token MULT
  languages:
  - All
- description: Starting with Operator /
  code: |-
    &COM Unexpected token DIV
    ? &ASSIGN /$&LF
  input: ''
  exception: true
  output: Unexpected token DIV
  languages:
  - All
- description: Missing Number After *
  code: |-
    &COM Unexpected token EOL
    ? &ASSIGN $*&LF
  input: ''
  exception: true
  output: Unexpected token EOL
  languages:
  - All
- description: Missing Number After /
  code: |-
    &COM Unexpected token EOL
    ? &ASSIGN $/&LF
  input: ''
  exception: true
  output: Unexpected token EOL
  languages:
  - All
- description: Only Operator *
  code: |-
    &COM Unexpected token MULT
    ? &ASSIGN *&LF
  input: ''
  exception: true
  output: Unexpected token MULT
  languages:
  - All
- description: Only Operator /
  code: |-
    &COM Unexpected token DIV
    ? &ASSIGN /&LF
  input: ''
  exception: true
  output: Unexpected token DIV
  languages:
  - All
- description: Two Consecultives Operators +*
  code: |-
    &COM Unexpected token MULT
    ? &ASSIGN $+*$&LF
  input: ''
  exception: true
  output: Unexpected token MULT
  languages:
  - All
- description: Two Consecultives Operators +/
  code: |-
    &COM Unexpected token DIV
    ? &ASSIGN $+/$&LF
  input: ''
  exception: true
  output: Unexpected token DIV
  languages:
  - All
- description: Two Consecultives Operators **
  code: |-
    &COM Unexpected token MULT
    ? &ASSIGN $**$&LF
  input: ''
  exception: true
  output: Unexpected token MULT
  languages:
  - All
- description: Wrong Comment
  code: |-
    &COM Unexpected token CLOSE_BRA
    ? &ASSIGN &COM$&LF
  input: ''
  exception: true
  output: Unexpected token CLOSE_BRA
  languages:
  - All
- description: Two Consecultives Operators */
  code: |-
    &COM Unexpected token DIV
    ? &ASSIGN $*/$&LF
  input: ''
  exception: true
  output: Unexpected token DIV
  languages:
  - All
- description: Two Consecultives Operators /*
  code: |-
    &COM Unexpected token MULT
    ? &ASSIGN $/*$&LF
  input: ''
  exception: true
  output: Unexpected token MULT
  languages:
  - All
- description: Missing )
  code: |-
    &COM Missing CLOSE_PAR
    ? &ASSIGN ($&LF
  input: ''
  exception: true
  output: Missing CLOSE_PAR
  languages:
  - All
- description: Missing (
  code: |-
    &COM Unexpected token CLOSE_PAR
    ? &ASSIGN $)&LF
  input: ''
  exception: true
  output: Unexpected token CLOSE_PAR
  languages:
  - All
- description: Missing )
  code: |-
    &COM Missing CLOSE_PAR
    ? &ASSIGN (($)&LF
  input: ''
  exception: true
  output: Missing CLOSE_PAR
  languages:
  - All
- description: Missing (
  code: |-
    &COM Unexpected token CLOSE_PAR
    ? &ASSIGN ($))&LF
  input: ''
  exception: true
  output: Unexpected token CLOSE_PAR
  languages:
  - All
- description: Wrong Print
  code: |-
    &COM Unexpected token OPEN_PAR (wrong print token)
    &WPRINT&FLP$&FRP&LF
  input: ''
  exception: true
  output: Unexpected token OPEN_PAR
  languages:
  - All
- description: No Operator
  code: |-
    &COM Unexpected token IDEN
    X &ASSIGN 1&LF
    ? &ASSIGN $ X&LF
  input: ''
  exception: true
  output: Unexpected token IDEN
  languages:
  - All
- description: Missing (
  code: |-
    &COM Unexpected token INT (expected OPEN_PAR)
    &PRINT $&FRP&LF
  input: ''
  exception: true
  output: Unexpected token INT (expected OPEN_PAR)
  languages:
  - All
- description: Missing )
  code: |-
    &COM Unexpected token EOL (expected CLOSE_PAR)
    &PRINT&FLP$&LF
  input: ''
  exception: true
  output: Unexpected token EOL (expected CLOSE_PAR)
  languages:
  - All
- description: Missing ()
  code: |-
    &COM Author: Rafael Dourado @rafaeldbo - Mar/2025
    &COM Unexpected token INT (expected OPEN_PAR)
    &PRINT $&LF
  input: ''
  exception: true
  output: Unexpected token INT (expected OPEN_PAR)
  languages:
  - All
- description: Missing Identifier
  code: |-
    &COM Identifier not found
    x1 &ASSIGN $&LF
    &PRINT&FLPX1&FRP&LF
  input: ''
  exception: true
  output: Identifier not found
  languages:
  - All
- description: Missing }
  code: |-
    &LBRA
      &COM Unexpected token EOF (expected CLOSE_BRA)
      ? &ASSIGN $&LF
  input: ''
  exception: true
  output: Unexpected token EOF (expected CLOSE_BRA)
  languages:
  - All
- description: Extra }
  code: |-
    &COM Unexpected token CLOSE_BRA (expected EOF)
    ? &ASSIGN $&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token CLOSE_BRA (expected EOF)
  languages:
  - All
- description: Invalid Identifier Name
  code: |-
    &COM Unexpected token IDEN
    1x &ASSIGN $&LF
    &PRINT&FLP1x&FRP&LF
  input: ''
  exception: true
  output: Unexpected token IDEN
  languages:
  - All
- description: Use Print as Identifier
  code: |-
    &COM Unexpected token ASSIGN (expected OPEN_PAR)
    &PRINT &ASSIGN ?&LF
  input: ''
  exception: true
  output: Unexpected token ASSIGN (expected OPEN_PAR)
  languages:
  - All
- description: Missing )
  code: |-
    &COM Unexpected token EOL (expected CLOSE_PAR)
    &PRINT&FLP$&COM&FRP&LF
  input: ''
  exception: true
  output: Unexpected token EOL (expected CLOSE_PAR)
  languages:
  - All
- description: Use Number as Identifier
  code: |-
    &COM Unexpected token INT
    3 &ASSIGN $ + $&LF
  input: ''
  exception: true
  output: Unexpected token INT
  languages:
  - All
- description: If without }
  code: |-
    &COM Unexpected EOF (Missing CLOSE_BRA)
    ? &ASSIGN 1&LF
    &IF &ELP? &EQ 1&ERP &LBRA
  input: ''
  exception: true
  output: Missing CLOSE_BRA
  languages:
  - All
- description: If without {
  code: |-
    &COM Missing OPEN_BRA
    ? &ASSIGN 1&LF
    &IF &ELP? &EQ 1&ERP
      ? &ASSIGN 2&LF
    &RBRA
  input: ''
  exception: true
  output: Missing OPEN_BRA
  languages:
  - All
- description: Else without }
  code: |-
    &COM Unexpected EOF (Missing CLOSE_BRA)
    ? &ASSIGN 1&LF
    &IF &ELP? &EQ 1&ERP &LBRA
      ? &ASSIGN 2&LF
    &RBRA &ELSE &LBRA
      ? &ASSIGN 3&LF
  input: ''
  exception: true
  output: Missing CLOSE_BRA
  languages:
  - All
- description: Else without {
  code: |-
    &COM Missing OPEN_BRA
    ? &ASSIGN 1&LF
    &IF &ELP? &EQ 1&ERP &LBRA
      ? &ASSIGN 2&LF
    &RBRA &ELSE
      ? &ASSIGN 3&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token EOF
  languages:
  - All
- description: While without }
  code: |-
    &COM Unexpected EOF (Missing CLOSE_BRA)
    ? &ASSIGN 1&LF
    &WHILE &ELP? &EQ 1&ERP &LBRA
      ? &ASSIGN 2&LF
  input: ''
  exception: true
  output: Unexpected token EOF
  languages:
  - All
- description: While without {
  code: |-
    &COM Missing OPEN_BRA
    ? &ASSIGN 1&LF
    &WHILE &ELP? &EQ 1&ERP
      ? &ASSIGN 2&LF
    &RBRA
  input: ''
  exception: true
  output: Missing OPEN_BRA
  languages:
  - All
- description: If with 2 Else's
  code: |-
    &COM Unexpected ELSE
    ? &ASSIGN 1&LF
    &IF &ELP? &EQ 1&ERP &LBRA
      ? &ASSIGN 2&LF
    &RBRA &ELSE &LBRA
      ? &ASSIGN 3&LF
    &RBRA &ELSE &LBRA
      ? &ASSIGN 4&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected ELSE
  languages:
  - All
- description: Missing Equal operand
  code: |-
    &COM Missing Right Expression
    ? &ASSIGN 1&LF
    &IF &ELP? &EQ&ERP &LBRA
      ? &ASSIGN 2&LF
    &RBRA
  input: ''
  exception: true
  output: Missing Right Expression
  languages:
  - All
- description: Missing > operand
  code: |-
    &COM Missing Right Expression
    ? &ASSIGN 1&LF
    &IF &ELP? &GT&ERP &LBRA
      ? &ASSIGN 2&LF
    &RBRA
  input: ''
  exception: true
  output: Missing Right Expression
  languages:
  - All
- description: Missing < operand
  code: |-
    &COM Missing Right Expression
    ? &ASSIGN 1&LF
    &IF &ELP? &LT&ERP &LBRA
      ? &ASSIGN 2&LF
    &RBRA
  input: ''
  exception: true
  output: Missing Right Expression
  languages:
  - All
- description: Missing Not operand
  code: |-
    &COM Missing Right Expression
    ? &ASSIGN 1&LF
    &IF &ELP&NOT&ERP &LBRA
      ? &ASSIGN 2&LF
    &RBRA
  input: ''
  exception: true
  output: Missing Right Expression
  languages:
  - All
- description: Missing Reader (
  code: |-
    &COM Missing OPEN_PAR
    ? &ASSIGN &SCAN&LF
  input: |-
    1
  exception: true
  output: Missing OPEN_PAR
  languages:
  - All
- description: Missing Reader )
  code: |-
    &COM Missing CLOSE_PAR
    ? &ASSIGN &SCAN&FLP&LF
  input: |-
    1
  exception: true
  output: Missing CLOSE_PAR
  languages:
  - All
- description: If with misaligned {
  code: |-
    &COM Unexpected token NEWLINE
    &IF &ELP1 &EQ 1&ERP
    &LBRA
    &RBRA
  input: ''
  exception: true
  output: Unexpected token INT
  languages:
  - Go
- description: If with misaligned }
  code: |-
    &COM Unexpected token CLOSE_BRA
    &IF &ELP1 &EQ 1&ERP &LBRA &RBRA
  input: ''
  exception: true
  output: Unexpected token INT
  languages:
  - Go
- description: Else with misaligned } (before)
  code: |-
    &COM Unexpected token NEWLINE
    &IF &ELP1 &EQ 1&ERP &LBRA 
    &RBRA
    &ELSE &LBRA 
    &RBRA
  input: ''
  exception: true
  output: Unexpected token NEWLINE Before Else
  languages:
  - Go
- description: Else with misaligned }
  code: |-
    &COM Unexpected token CLOSE_BRA
    &IF &ELP1 &EQ 1&ERP &LBRA 
    &RBRA &ELSE &LBRA &RBRA
  input: ''
  exception: true
  output: Unexpected token CLOSE_BRA in Else
  languages:
  - Go
- description: Else with misaligned {
  code: |-
    &COM Unexpected token NEWLINE
    &IF &ELP1 &EQ 1&ERP &LBRA 
    &RBRA &ELSE 
    &LBRA
    &RBRA
  input: ''
  exception: true
  output: Unexpected token NEWLINE in Else
  languages:
  - Go
- description: While with misaligned {
  code: |-
    &COM Unexpected token NEWLINE
    &WHILE &ELP1 &EQ 1&ERP 
    &LBRA
    &RBRA
  input: ''
  exception: true
  output: Unexpected token NEWLINE in While
  languages:
  - Go
- description: While with misaligned }
  code: |-
    &COM Unexpected token CLOSE_BRA
    &WHILE &ELP1 &EQ 1&ERP &LBRA &RBRA
  input: ''
  exception: true
  output: Unexpected token CLOSE_BRA in While
  languages:
  - Go
- description: If missing Brackets
  code: |-
    &COM Missing OPEN_BRA
    &IF &ELP1 &EQ 1&ERP
      ? &ASSIGN $&LF
  input: ''
  exception: true
  output: Missing OPEN_BRA in If
  languages:
  - Go
  - Zig
- description: While missing Brackets
  code: |-
    &COM Missing OPEN_BRA
    &WHILE &ELP1 &EQ 1&ERP
      ? &ASSIGN $&LF
  input: ''
  exception: true
  output: Missing OPEN_BRA in If
  languages:
  - Go
  - Zig
- description: If missing PAR
  code: |-
    &COM Missing OPEN_PAR
    &IF 1 &EQ 1 &LBRA
      ? &ASSIGN $&LF
    &RBRA
  input: ''
  exception: true
  output: Missing OPEN_PAR in If
  languages:
  - C
  - TypeScript
  - Zig
- description: While missing PAR
  code: |-
    &COM Missing OPEN_PAR
    &WHILE 1 &EQ 1 &LBRA
      ? &ASSIGN $&LF
    &RBRA
  input: ''
  exception: true
  output: Missing OPEN_PAR in While
  languages:
  - Zig
  - TypeScript
  - C
