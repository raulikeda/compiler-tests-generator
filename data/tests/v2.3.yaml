- description: Valid Input
  code: |-
    &LBRA
      &PINT&VAR x_1&TSEP&INT&LF
      x_1 &ASSIGN &SCAN&FLP&FRP&LF
      
      &PRINT&FLPx_1&FRP&LF
      
      &IF &ELP(x_1 &GT 1 &AND &NOT&NOT&NOT(x_1 &LT 1)) &OR x_1 &EQ 3&ERP &LBRA
        x_1 &ASSIGN 2&LF
      &RBRA
      
      &PINT&VAR x&TSEP&INT &ASSIGN 3+6/3   *  2 -+-  +  2*4/2 + 0/1 -((6+ ((4)))/(2))&LF &COM Teste &COM Teste 2
      &PINT&VAR y_1&TSEP&INT &ASSIGN 3&LF
      y_1 &ASSIGN y_1 + x_1&LF
      &PINT&VAR z__&TSEP&INT&LF
      z__ &ASSIGN x + y_1&LF
      
      &IF &ELPx_1 &EQ 2&ERP &LBRA
        x_1 &ASSIGN 2&LF
      &RBRA
      
      &IF &ELPx_1 &EQ 3&ERP &LBRA
        x_1 &ASSIGN 2&LF
      &RBRA &ELSE &LBRA
        x_1 &ASSIGN 3&LF
      &RBRA
      
      x_1 &ASSIGN 0&LF
      &WHILE &ELPx_1 &LT 1 &OR x &EQ 2&ERP &LBRA
        &PRINT&FLPx_1&FRP&LF
        x_1 &ASSIGN x_1 + 1&LF
      &RBRA
      
      
      &LF&LF&LF
      &COM Saida final
      &PRINT&FLPx_1&FRP&LF
      &PRINT&FLPx&FRP&LF
      &PRINT&FLPz__+1&FRP&LF
      
      &COM All int operations
      &PINT&VAR y&TSEP&INT &ASSIGN 2&LF
      &PINT&VAR z&TSEP&INT&LF
      z = (y - 1)&LF
      &PRINT(y+z)&LF
      &PRINT(y-z)&LF
      &PRINT(y*z)&LF
      &PRINT(y/z)&LF
      &PRINT(y &EQ z)&LF
      &PRINT(y &LT z)&LF
      &PRINT(y &GT z)&LF
      
      &COM All str operations 
      &PSTR&VAR a&TSEP&STR&LF
      &PSTR&VAR b&TSEP&STR&LF
      
      x_1 = 1&LF
      y = 1&LF 
      z = 2&LF
      a = "abc"&LF
      b = "def"&LF
      &PRINT(a&CONCATb)&LF
      &PRINT(a&CONCATx_1)&LF
      &PRINT(x_1&CONCATa)&LF
      &PRINT(a&CONCAT(x_1==1))&LF
      &PRINT(a &EQ a)&LF
      &PRINT(a &LT b)&LF
      &PRINT(a &GT b)&LF
    &RBRA
  input: ''
  exception: false
  output: |-
    3
    0
    1
    6
    12
    3
    1
    2
    2
    &FALSE
    &FALSE
    &TRUE
    abcdef
    abc1
    1abc
    abc&TRUE
    &TRUE
    &TRUE
    &FALSE
  languages:
  - All
- description: Missing Expression After +
  code: |-
    &LBRA
      &COM Unexpected token EOL
      &PINT&VAR ?&TSEP&INT &ASSIGN $+&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token EOL
  languages:
  - All
- description: Missing Expression After -
  code: |-
    &LBRA
      &COM Unexpected token EOL
      &PINT&VAR ?&TSEP&INT &ASSIGN $-&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token EOL
  languages:
  - All
- description: Empty Expression
  code: |-
    &LBRA
      &COM Unexpected token EOL
      &PINT&VAR ?&TSEP&INT &ASSIGN &LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token EOL
  languages:
  - All
- description: Missing Expression After +
  code: |-
    &LBRA
      &COM Unexpected token EOL
      &PINT&VAR ?&TSEP&INT &ASSIGN +&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token EOL
  languages:
  - All
- description: Missing Expression After -
  code: |-
    &LBRA
      &COM Unexpected token EOL
      &PINT&VAR ?&TSEP&INT &ASSIGN -&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token EOL
  languages:
  - All
- description: No Operator
  code: |-
    &LBRA
      &COM Unexpected token INT (expected EOL)
      &PINT&VAR ?&TSEP&INT &ASSIGN $ $&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token INT
  languages:
  - All
- description: Invalid Token
  code: |-
    &LBRA
      &COM Invalid token ,
      &PINT&VAR ?&TSEP&INT &ASSIGN ,&LF
    &RBRA
  input: ''
  exception: true
  output: Invalid token ,
  languages:
  - All
- description: Starting with Operator *
  code: |-
    &LBRA
      &COM Unexpected token MULT
      &PINT&VAR ?&TSEP&INT &ASSIGN *$&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token MULT
  languages:
  - All
- description: Starting with Operator /
  code: |-
    &LBRA
      &COM Unexpected token DIV
      &PINT&VAR ?&TSEP&INT &ASSIGN /$&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token DIV
  languages:
  - All
- description: Missing Number After *
  code: |-
    &LBRA
      &COM Unexpected token EOL
      &PINT&VAR ?&TSEP&INT &ASSIGN $*&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token EOL
  languages:
  - All
- description: Missing Number After /
  code: |-
    &LBRA
      &COM Unexpected token EOL
      &PINT&VAR ?&TSEP&INT &ASSIGN $/&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token EOL
  languages:
  - All
- description: Only Operator *
  code: |-
    &LBRA
      &COM Unexpected token MULT
      &PINT&VAR ?&TSEP&INT &ASSIGN *&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token MULT
  languages:
  - All
- description: Only Operator /
  code: |-
    &LBRA
      &COM Unexpected token DIV
      &PINT&VAR ?&TSEP&INT &ASSIGN /&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token DIV
  languages:
  - All
- description: Two Consecultives Operators +*
  code: |-
    &LBRA
      &COM Unexpected token MULT
      &PINT&VAR ?&TSEP&INT &ASSIGN $+*$&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token MULT
  languages:
  - All
- description: Two Consecultives Operators +/
  code: |-
    &LBRA
      &COM Unexpected token DIV
      &PINT&VAR ?&TSEP&INT &ASSIGN $+/$&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token DIV
  languages:
  - All
- description: Two Consecultives Operators **
  code: |-
    &LBRA
      &COM Unexpected token MULT
      &PINT&VAR ?&TSEP&INT &ASSIGN $**$&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token MULT
  languages:
  - All
- description: Wrong Comment
  code: |-
    &LBRA
      &COM Unexpected token CLOSE_BRA
      &PINT&VAR ?&TSEP&INT &ASSIGN &COM$&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token CLOSE_BRA
  languages:
  - All
- description: Two Consecultives Operators */
  code: |-
    &LBRA
      &COM Unexpected token DIV
      &PINT&VAR ?&TSEP&INT &ASSIGN $*/$&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token DIV
  languages:
  - All
- description: Two Consecultives Operators /*
  code: |-
    &LBRA
      &COM Unexpected token MULT
      &PINT&VAR ?&TSEP&INT &ASSIGN $/*$&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token MULT
  languages:
  - All
- description: Missing )
  code: |-
    &LBRA
      &COM Missing CLOSE_PAR
      &PINT&VAR ?&TSEP&INT &ASSIGN ($&LF
    &RBRA
  input: ''
  exception: true
  output: Missing CLOSE_PAR
  languages:
  - All
- description: Missing (
  code: |-
    &LBRA
      &COM Unexpected token CLOSE_PAR
      &PINT&VAR ?&TSEP&INT &ASSIGN $)&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token CLOSE_PAR
  languages:
  - All
- description: Missing )
  code: |-
    &LBRA
      &COM Missing CLOSE_PAR
      &PINT&VAR ?&TSEP&INT &ASSIGN (($)&LF
    &RBRA
  input: ''
  exception: true
  output: Missing CLOSE_PAR
  languages:
  - All
- description: Missing (
  code: |-
    &LBRA
      &COM Unexpected token CLOSE_PAR
      &PINT&VAR ?&TSEP&INT &ASSIGN ($))&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token CLOSE_PAR
  languages:
  - All
- description: Wrong Print
  code: |-
    &LBRA
      &COM Unexpected token OPEN_PAR (wrong print token)
      &WPRINT&FLP$&FRP&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token OPEN_PAR
  languages:
  - All
- description: No Operator
  code: |-
    &LBRA
      &COM Unexpected token IDEN
      &PINT&VAR L&TSEP&INT &ASSIGN 1&LF
      &PINT&VAR ?&TSEP&INT &ASSIGN $ L&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token IDEN
  languages:
  - All
- description: Missing (
  code: |-
    &LBRA
      &COM Unexpected token INT (expected OPEN_PAR)
      &PRINT $&FRP&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token INT (expected OPEN_PAR)
  languages:
  - All
- description: Missing )
  code: |-
    &LBRA
      &COM Unexpected token EOL (expected CLOSE_PAR)
      &PRINT&FLP$&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token EOL (expected CLOSE_PAR)
  languages:
  - All
- description: Missing ()
  code: |-
    &LBRA
      &COM Author: Rafael Dourado @rafaeldbo - Mar/2025
      &COM Unexpected token INT (expected OPEN_PAR)
      &PRINT $&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token INT (expected OPEN_PAR)
  languages:
  - All
- description: Missing Identifier
  code: |-
    &LBRA
      &COM Identifier not found
      &PINT&VAR x1&TSEP&INT &ASSIGN $&LF
      &PRINT&FLPX1&FRP&LF
    &RBRA
  input: ''
  exception: true
  output: Identifier not found
  languages:
  - All
- description: Missing }
  code: |-
    &LBRA
      &COM Unexpected token EOF (expected CLOSE_BRA)
      &PINT&VAR ?&TSEP&INT &ASSIGN $&LF
  input: ''
  exception: true
  output: Unexpected token EOF (expected CLOSE_BRA)
  languages:
  - All
- description: Extra {}
  code: |-
    &LBRA
      &COM Unexpected token OPEN_BRA (expected EOF)
      &PINT&VAR ?&TSEP&INT &ASSIGN $&LF
    &RBRA
    &LBRA
    &RBRA
  input: ''
  exception: true
  output: '&COM Unexpected token OPEN_BRA (expected EOF)'
  languages:
  - All
- description: Extra nested {}
  code: |-
    &LBRA
      &LBRA
        &COM Unexpected token OPEN_BRA
        &PINT&VAR ?&TSEP&INT &ASSIGN $&LF
      &RBRA
    &RBRA
  input: ''
  exception: true
  output: '&COM Unexpected token OPEN_BRA'
  languages:
  - All
- description: Extra }
  code: |-
    &LBRA
      &COM Unexpected token CLOSE_BRA (expected EOF)
      &PINT&VAR ?&TSEP&INT &ASSIGN $&LF
    &RBRA
    &RBRA
  input: ''
  exception: true
  output: Unexpected token CLOSE_BRA (expected EOF)
  languages:
  - All
- description: Missing {}
  code: |-
    &COM Unexpected token IDEN (expected OPEN_BRA)
    &PINT&VAR ?&TSEP&INT &ASSIGN $&LF
  input: ''
  exception: true
  output: Unexpected token IDEN (expected OPEN_BRA)
  languages:
  - All
- description: Missing {}
  code: ""
  input: ''
  exception: true
  output: Unexpected token EOF (expected OPEN_BRA)
  languages:
  - All
- description: Invalid Identifier Name
  code: |-
    &LBRA
      &COM Unexpected token IDEN
      &PINT&VAR 1x&TSEP&INT &ASSIGN $&LF
      &PRINT&FLP1x&FRP&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token IDEN
  languages:
  - All
- description: Use Print as Identifier
  code: |-
    &LBRA
      &COM Unexpected token ASSIGN (expected OPEN_PAR)
      &PRINT &ASSIGN ?&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token ASSIGN (expected OPEN_PAR)
  languages:
  - All
- description: Missing )
  code: |-
    &LBRA
      &COM Unexpected token EOL (expected CLOSE_PAR)
      &PRINT&FLP$&COM&FRP&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token EOL (expected CLOSE_PAR)
  languages:
  - All
- description: Use Number as Identifier
  code: |-
    &LBRA
      &COM Unexpected token INT
      3 &ASSIGN $ + $&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token INT
  languages:
  - All
- description: If without }
  code: |-
    &LBRA
      &COM Unexpected EOF (Missing CLOSE_BRA)
      &PINT&VAR ?&TSEP&INT &ASSIGN 1&LF
      &IF &ELP? &EQ 1&ERP &LBRA
    &RBRA
  input: ''
  exception: true
  output: Missing CLOSE_BRA
  languages:
  - All
- description: If without {
  code: |-
    &LBRA
      &COM Missing OPEN_BRA
      &PINT&VAR ?&TSEP&INT &ASSIGN 1&LF
      &IF &ELP? &EQ 1&ERP
        ? &ASSIGN 2&LF
      &RBRA
    &RBRA
  input: ''
  exception: true
  output: Missing OPEN_BRA
  languages:
  - All
- description: Else without }
  code: |-
    &LBRA
      &COM Unexpected EOF (Missing CLOSE_BRA)
      &PINT&VAR ?&TSEP&INT &ASSIGN 1&LF
      &IF &ELP? &EQ 1&ERP &LBRA
        ? &ASSIGN 2&LF
      &RBRA &ELSE &LBRA
        ? &ASSIGN 3&LF
    &RBRA
  input: ''
  exception: true
  output: Missing CLOSE_BRA
  languages:
  - All
- description: Else without {
  code: |-
    &LBRA
      &COM Missing OPEN_BRA
      &PINT&VAR ?&TSEP&INT &ASSIGN 1&LF
      &IF &ELP? &EQ 1&ERP &LBRA
        ? &ASSIGN 2&LF
      &RBRA &ELSE
        ? &ASSIGN 3&LF
      &RBRA
    &RBRA
  input: ''
  exception: true
  output: Unexpected token EOF
  languages:
  - All
- description: While without }
  code: |-
    &LBRA
      &COM Unexpected EOF (Missing CLOSE_BRA)
      &PINT&VAR ?&TSEP&INT &ASSIGN 1&LF
      &WHILE &ELP? &EQ 1&ERP &LBRA
        ? &ASSIGN 2&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected token EOF
  languages:
  - All
- description: While without {
  code: |-
    &LBRA
      &COM Missing OPEN_BRA
      &PINT&VAR ?&TSEP&INT &ASSIGN 1&LF
      &WHILE &ELP? &EQ 1&ERP
        ? &ASSIGN 2&LF
      &RBRA
    &RBRA
  input: ''
  exception: true
  output: Missing OPEN_BRA
  languages:
  - All
- description: If with 2 Blocks
  code: |-
    &LBRA
      &COM Unexpected OPEN_BRA
      &PINT&VAR ?&TSEP&INT &ASSIGN 1&LF
      &IF &ELP? &EQ 1&ERP &LBRA
        ? &ASSIGN 2&LF
      &RBRA
      &LBRA
        ? &ASSIGN 3&LF
      &RBRA
    &RBRA
  input: ''
  exception: true
  output: Unexpected OPEN_BRA
  languages:
  - All
- description: If with 2 Else's
  code: |-
    &LBRA
      &COM Unexpected ELSE
      &PINT&VAR ?&TSEP&INT &ASSIGN 1&LF
      &IF &ELP? &EQ 1&ERP &LBRA
        ? &ASSIGN 2&LF
      &RBRA &ELSE &LBRA
        ? &ASSIGN 3&LF
      &RBRA &ELSE &LBRA
        ? &ASSIGN 4&LF
      &RBRA
    &RBRA
  input: ''
  exception: true
  output: Unexpected OPEN_BRA
  languages:
  - All
- description: Missing Equal operand
  code: |-
    &LBRA
      &COM Missing Right Expression
      &PINT&VAR ?&TSEP&INT &ASSIGN 1&LF
      &IF &ELP? &EQ&ERP &LBRA
        ? &ASSIGN 2&LF
      &RBRA
    &RBRA
  input: ''
  exception: true
  output: Missing Right Expression
  languages:
  - All
- description: Missing > operand
  code: |-
    &LBRA
      &COM Missing Right Expression
      &PINT&VAR ?&TSEP&INT &ASSIGN 1&LF
      &IF &ELP? &GT&ERP &LBRA
        ? &ASSIGN 2&LF
      &RBRA
    &RBRA
  input: ''
  exception: true
  output: Missing Right Expression
  languages:
  - All
- description: Missing < operand
  code: |-
    &LBRA
      &COM Missing Right Expression
      &PINT&VAR ?&TSEP&INT &ASSIGN 1&LF
      &IF &ELP? &LT&ERP &LBRA
        ? &ASSIGN 2&LF
      &RBRA
    &RBRA
  input: ''
  exception: true
  output: Missing Right Expression
  languages:
  - All
- description: Missing Not operand
  code: |-
    &LBRA
      &COM Missing Right Expression
      &PINT&VAR ?&TSEP&INT &ASSIGN 1&LF
      &IF &ELP&NOT&ERP &LBRA
        ? &ASSIGN 2&LF
      &RBRA
    &RBRA
  input: ''
  exception: true
  output: Missing Right Expression
  languages:
  - All
- description: Missing Reader (
  code: |-
    &LBRA
      &COM Missing OPEN_PAR
      &PSTR&VAR ?&TSEP&STR &ASSIGN &SCAN&LF
    &RBRA
  input: ''
  exception: true
  output: Missing OPEN_PAR
  languages:
  - All
- description: Missing Reader )
  code: |-
    &LBRA
      &COM Missing CLOSE_PAR
      &PSTR&VAR ?&TSEP&STR &ASSIGN &SCAN&FLP&LF
    &RBRA
  input: ''
  exception: true
  output: Missing CLOSE_PAR
  languages:
  - All
- description: If with misaligned {
  code: |-
    &LBRA
      &COM Unexpected token NEWLINE
      &IF &ELP1 &EQ 1&ERP
      &LBRA
      &RBRA
    &RBRA
  input: ''
  exception: true
  output: Unexpected token INT
  languages:
  - Go
- description: If with misaligned }
  code: |-
    &LBRA
      &COM Unexpected token CLOSE_BRA
      &IF &ELP1 &EQ 1&ERP &LBRA &RBRA
    &RBRA
  input: ''
  exception: true
  output: Unexpected token INT
  languages:
  - Go
- description: Else with misaligned } (before)
  code: |-
    &LBRA
      &COM Unexpected token NEWLINE
      &IF &ELP1 &EQ 1&ERP &LBRA 
      &RBRA
      &ELSE &LBRA 
      &RBRA
    &RBRA
  input: ''
  exception: true
  output: Unexpected token NEWLINE Before Else
  languages:
  - Go
- description: Else with misaligned }
  code: |-
    &LBRA
      &COM Unexpected token CLOSE_BRA
      &IF &ELP1 &EQ 1&ERP &LBRA 
      &RBRA &ELSE &LBRA &RBRA
    &RBRA
  input: ''
  exception: true
  output: Unexpected token CLOSE_BRA in Else
  languages:
  - Go
- description: 'Else with misaligned {'
  code: |-
    &LBRA
      &COM Unexpected token NEWLINE
      &IF &ELP1 &EQ 1&ERP &LBRA 
      &RBRA &ELSE 
      &LBRA
      &RBRA
    &RBRA
  input: ''
  exception: true
  output: Unexpected token NEWLINE in Else
  languages:
  - Go
- description: While with misaligned {
  code: |-
    &LBRA
      &COM Unexpected token NEWLINE
      &WHILE &ELP1 &EQ 1&ERP 
      &LBRA 
      &RBRA
    &RBRA
  input: ''
  exception: true
  output: Unexpected token NEWLINE in While
  languages:
  - Go
- description: While with misaligned }
  code: |-
    &LBRA
      &COM Unexpected token CLOSE_BRA
      &WHILE &ELP1 &EQ 1&ERP &LBRA &RBRA
    &RBRA
  input: ''
  exception: true
  output: Unexpected token CLOSE_BRA in While
  languages:
  - Go
- description: If missing Brackets
  code: |-
    &LBRA
      &COM Missing OPEN_BRA
      &IF &ELP1 &EQ 1&ERP
        ? &ASSIGN $&LF
    &RBRA
  input: ''
  exception: true
  output: Missing OPEN_BRA in If
  languages:
  - Go
  - Zig
- description: While missing Brackets
  code: |-
    &LBRA
      &COM Missing OPEN_BRA
      &WHILE &ELP1 &EQ 1&ERP
        ? &ASSIGN $&LF
    &RBRA
  input: ''
  exception: true
  output: Missing OPEN_BRA in If
  languages:
  - Go
  - Zig
- description: If missing PAR
  code: |-
    &LBRA
      &COM Missing OPEN_PAR
      &IF 1 &EQ 1 &LBRA
        &PINT&VAR ?&TSEP&INT &ASSIGN $&LF
      &RBRA
    &RBRA
  input: ''
  exception: true
  output: Missing OPEN_PAR in If
  languages:
  - Zig
  - C
- description: While missing PAR
  code: |-
    &LBRA
      &COM Missing OPEN_PAR
      &WHILE 1 &EQ 1 &LBRA
        &PINT&VAR ?&TSEP&INT &ASSIGN $&LF
      &RBRA
    &RBRA
  input: ''
  exception: true
  output: Missing OPEN_PAR in While
  languages:
  - Zig
  - C
- description: Incomplete Declaration
  code: |-
    &LBRA
      &COM COLON not found
      &VAR x1 &ASSIGN $&LF
    &RBRA
  input: ''
  exception: true
  output: COLON not found
  languages:
  - Zig
- description: Incomplete Declaration
  code: |-
    &LBRA
      &COM COLON not found
      &VAR x1 &INT &ASSIGN $&LF
    &RBRA
  input: ''
  exception: true
  output: COLON not found
  languages:
  - Zig
- description: Incomplete Declaration
  code: |-
    &LBRA
      &COM TYPE not found
      &VAR x1&TSEP &ASSIGN $&LF
    &RBRA
  input: ''
  exception: true
  output: TYPE not found
  languages:
  - Go
  - Zig
- description: Incomplete Declaration
  code: |-
    &LBRA
      &COM Unexpected Identifier
      &PWINT&VAR x1&TSEP&WINT &ASSIGN $&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected Identifier
  languages:
  - All
- description: Incompatible Types
  code: |-
    &LBRA
      &COM Incompatible types
      &PINT&VAR ?&TSEP&INT &ASSIGN &TRUE&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible types
  languages:
  - All
- description: Incompatible Types
  code: |-
    &LBRA
      &COM Incompatible types
      &PINT&VAR ?&TSEP&INT &ASSIGN "a"&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible types
  languages:
  - All
- description: Incompatible Types
  code: |-
    &LBRA
      &COM Incompatible types
      &PBOOL&VAR ?&TSEP&BOOL &ASSIGN $&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible types
  languages:
  - All
- description: Incompatible Types
  code: |-
    &LBRA
      &COM Incompatible types
      &PBOOL&VAR ?&TSEP&BOOL &ASSIGN "a"&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible types
  languages:
  - All
- description: Incompatible Types
  code: |-
    &LBRA
      &COM Incompatible types
      &PBOOL&VAR ?&TSEP&BOOL &ASSIGN $&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible types
  languages:
  - All
- description: Incompatible Types
  code: |-
    &LBRA
      &COM Incompatible types
      &PSTR&VAR ?&TSEP&STR &ASSIGN $&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible types
  languages:
  - All
- description: Incompatible Types
  code: |-
    &LBRA
      &COM Incompatible types
      &PSTR&VAR ?&TSEP&STR &ASSIGN &FALSE&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible types
  languages:
  - All
- description: Incompatible Types
  code: |-
    &LBRA
      &COM Incompatible types
      &PSTR&VAR ?&TSEP&STR &ASSIGN &SCAN&FLP&FRP&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible types
  languages:
  - All
- description: Double Declaration
  code: |-
    &LBRA
      &COM Variable Already Declared
      &PINT&VAR ?&TSEP&INT&LF
      &PSTR&VAR ?&TSEP&STR&LF
    &RBRA
  input: ''
  exception: true
  output: Variable Already Declared
  languages:
  - All
- description: Open String
  code: |-
    &LBRA
      &COM Unexpected EOF
      &PSTR&VAR ?&TSEP&STR &ASSIGN "a&LF
    &RBRA
  input: ''
  exception: true
  output: Unexpected EOF
  languages:
  - All
- description: Wrong True Case
  code: |-
    &LBRA
      &COM Variable not found
      &PBOOL&VAR ?&TSEP&BOOL &ASSIGN &WTRUE&LF
    &RBRA
  input: ''
  exception: true
  output: Variable not found
  languages:
  - All
- description: Incompatible Types ==
  code: |-
    &LBRA
      &COM Incompatible Types
      &PBOOL&VAR ?&TSEP&BOOL &ASSIGN $&EQ"a"&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible Types
  languages:
  - All
- description: Incompatible Types ==
  code: |-
    &LBRA
      &COM Incompatible Types
      &PBOOL&VAR ?&TSEP&BOOL &ASSIGN 1&EQ&TRUE&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible Types
  languages:
  - All
- description: Incompatible Types ==
  code: |-
    &LBRA
      &COM Incompatible Types
      &PBOOL&VAR ?&TSEP&BOOL &ASSIGN "a"&EQ&TRUE&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible Types
  languages:
  - All
- description: Incompatible Types >
  code: |-
    &LBRA
      &COM Incompatible Types
      &PBOOL&VAR ?&TSEP&BOOL &ASSIGN $&GT"a"&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible Types
  languages:
  - All
- description: Incompatible Types >
  code: |-
    &LBRA
      &COM Incompatible Types
      &PBOOL&VAR ?&TSEP&BOOL &ASSIGN 1&GT&TRUE&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible Types
  languages:
  - All
- description: Incompatible Types >
  code: |-
    &LBRA
      &COM Incompatible Types
      &PBOOL&VAR ?&TSEP&BOOL &ASSIGN "a"&LT&TRUE&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible Types
  languages:
  - All
- description: Incompatible Types <
  code: |-
    &LBRA
      &COM Incompatible Types
      &PBOOL&VAR ?&TSEP&BOOL &ASSIGN $&LT"a"&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible Types
  languages:
  - All
- description: Incompatible Types <
  code: |-
    &LBRA
      &COM Incompatible Types
      &PBOOL&VAR ?&TSEP&BOOL &ASSIGN &TRUE<$&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible Types
  languages:
  - All
- description: Incompatible Types <
  code: |-
    &LBRA
      &COM Incompatible Types
      &PBOOL&VAR ?&TSEP&BOOL &ASSIGN "a"<&TRUE&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible Types
  languages:
  - All
- description: Incompatible Types &&
  code: |-
    &LBRA
      &COM Incompatible Types
      &PBOOL&VAR ?&TSEP&BOOL &ASSIGN "a"&AND$&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible Types
  languages:
  - All
- description: Incompatible Types ||
  code: |-
    &LBRA
      &COM Incompatible Types
      &PBOOL&VAR ?&TSEP&BOOL &ASSIGN "a"&OR$&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible Types
  languages:
  - All
- description: Incompatible Types !
  code: |-
    &LBRA
      &COM Incompatible Types
      &PBOOL&VAR ?&TSEP&BOOL &ASSIGN &NOT$&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible Types
  languages:
  - All
- description: Incompatible Types +
  code: |-
    &LBRA
      &COM Incompatible Types
      &PINT&VAR ?&TSEP&INT &ASSIGN 1+&TRUE&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible Types
  languages:
  - All
- description: Incompatible Types +
  code: |-
    &LBRA
      &COM Incompatible Types
      &PINT&VAR ?&TSEP&INT &ASSIGN &TRUE+1&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible Types
  languages:
  - All
- description: Incompatible Types -
  code: |-
    &LBRA
      &COM Incompatible Types
      &PINT&VAR ?&TSEP&INT &ASSIGN 1-&TRUE&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible Type
  languages:
  - All
- description: Incompatible Types -
  code: |-
    &LBRA
      &COM Incompatible Types
      &PINT&VAR ?&TSEP&INT &ASSIGN &TRUE-1&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible Type
  languages:
  - All
- description: Incompatible Types *
  code: |-
    &LBRA
      &COM Incompatible Types
      &PINT&VAR ?&TSEP&INT &ASSIGN 1*&TRUE&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible Type
  languages:
  - All
- description: Incompatible Types *
  code: |-
    &LBRA
      &COM Incompatible Types
      &PINT&VAR ?&TSEP&INT &ASSIGN &TRUE*1&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible Type
  languages:
  - All
- description: Incompatible Types /
  code: |-
    &LBRA
      &COM Incompatible Types
      &PINT&VAR ?&TSEP&INT &ASSIGN $/&TRUE&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible Type
  languages:
  - All
- description: Incompatible Types /
  code: |-
    &LBRA
      &COM Incompatible Types
      &PINT&VAR ?&TSEP&INT &ASSIGN &TRUE/1&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible Type
  languages:
  - All
- description: Incompatible Types
  code: |-
    &LBRA
      &COM Incompatible Types
      &PINT&VAR ?&TSEP&INT &ASSIGN &TRUE&OR&FALSE&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible Type
  languages:
  - All
- description: Incompatible Types
  code: |-
    &LBRA
      &COM Incompatible Types
      &PSTR&VAR ?&TSEP&STR &ASSIGN $+$&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible Type
  languages:
  - All
- description: Incompatible Types
  code: |-
    &LBRA
      &COM Incompatible Types
      &PBOOL&VAR ?&TSEP&BOOL &ASSIGN "a"&CONCAT"b"&LF
    &RBRA
  input: ''
  exception: true
  output: Incompatible Type
  languages:
  - All
- description: Incompatible Types
  code: |-
    &LBRA
      &COM Incompatible Types
      &IF &ELP1+1&ERP &LBRA
      &RBRA
    &RBRA
  input: ''
  exception: true
  output: Incompatible Type
  languages:
  - All
- description: Incompatible Types
  code: |-
    &LBRA
      &COM Incompatible Types
      &WHILE &ELP0+0&ERP &LBRA
      &RBRA
    &RBRA
  input: ''
  exception: true
  output: Incompatible Type
  languages:
  - All
